# Default Coding Workflow Configuration
# This workflow guides all coding changes through a comprehensive 13-step process

workflow:
  name: "Default Coding Workflow"
  description: "Standardized 13-step workflow for all coding changes"

  steps:
    - id: prompt_rewrite
      name: "Rewrite Prompt"
      agent: prompt-writer
      prompt: |
        Refine and clarify the following task requirements:
        {task}

        Create a clear, actionable prompt that removes ambiguity and defines success criteria.

    - id: create_issue
      name: "Create GitHub Issue"
      command: gh issue create
      prompt: |
        Create a GitHub issue for: {refined_task}
        Include clear description, requirements, and success criteria.

    - id: setup_worktree
      name: "Setup Worktree"
      command: git worktree add
      prompt: |
        Create a new worktree and branch for issue #{issue_number}
        Branch name: feat/issue-{issue_number}-{brief_description}

    - id: research_design
      name: "Research & Design"
      agents: [architect, tester]
      prompt: |
        Task: {refined_task}
        1. Research existing codebase
        2. Design solution architecture
        3. Write failing test for TDD
        4. Create implementation plan

    - id: implement
      name: "Implementation"
      agent: builder
      prompt: |
        Implement the solution based on:
        - Architecture: {architecture}
        - Tests: {test_files}
        - Requirements: {refined_task}

        Follow TDD - make the tests pass iteratively.

    - id: simplify
      name: "Refactor & Simplify"
      agent: cleanup
      prompt: |
        Apply ruthless simplicity to the implementation:
        - Remove unnecessary abstraction
        - Eliminate dead code
        - Simplify complex logic
        - Ensure single responsibility

    - id: run_tests
      name: "Run Tests & Checks"
      command: pre-commit run --all-files
      prompt: |
        Run all tests, linters, and pre-commit hooks.
        Fix any issues found until all checks pass.

    - id: commit
      name: "Commit & Push"
      command: git commit && git push
      prompt: |
        Create detailed commit message for changes.
        Reference issue #{issue_number}.
        Push to remote branch.

    - id: open_pr
      name: "Open Pull Request"
      command: gh pr create
      prompt: |
        Open PR for issue #{issue_number}
        Include comprehensive description of changes.
        Link to issue and provide test plan.

    - id: review_pr
      name: "Review PR"
      agent: reviewer
      prompt: |
        Review the PR thoroughly:
        - Check code quality
        - Verify philosophy compliance
        - Test coverage
        - Post review comments

    - id: implement_feedback
      name: "Implement Feedback"
      agent: builder
      prompt: |
        Address all review feedback:
        {review_comments}

        Make necessary changes and push updates.

    - id: philosophy_check
      name: "Philosophy Compliance"
      agent: reviewer
      prompt: |
        Final philosophy compliance check:
        - Ruthless simplicity achieved?
        - Bricks & studs pattern followed?
        - Zero-BS implementation?
        - All tests passing?

    - id: ensure_mergeable
      name: "Ensure Mergeable"
      agent: ci-diagnostic-workflow
      prompt: |
        Ensure PR is ready to merge:
        - CI passing
        - No merge conflicts
        - All review comments addressed
        - Tests passing

  configuration:
    allow_skip: true
    show_on_first_run: true
    parallel_agents: true
    error_handling: pause # pause, retry, or fail
