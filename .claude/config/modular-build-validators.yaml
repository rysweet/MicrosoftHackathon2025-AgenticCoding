# External Validation Tools Configuration for Modular Build Command
# This configuration defines external tools that can be integrated into the Review phase

validators:
  code_quality:
    - tool: "pylint"
      description: "Python code quality and style checker"
      command: "pylint --output-format=json --reports=no {module_path}"
      supported_languages: ["python"]
      schema: "pylint.result.schema.json"
      timeout: 120
      required: false
      failure_threshold: "error" # error, warning, info

    - tool: "eslint"
      description: "JavaScript/TypeScript linting utility"
      command: "eslint --format json {module_path}"
      supported_languages: ["javascript", "typescript"]
      schema: "eslint.result.schema.json"
      timeout: 90
      required: false
      failure_threshold: "error"

    - tool: "ruff"
      description: "Fast Python linter"
      command: "ruff check --output-format=json {module_path}"
      supported_languages: ["python"]
      schema: "ruff.result.schema.json"
      timeout: 60
      required: false
      failure_threshold: "error"

  security:
    - tool: "bandit"
      description: "Python security linter"
      command: "bandit -f json -r {module_path}"
      supported_languages: ["python"]
      schema: "bandit.result.schema.json"
      timeout: 180
      required: true
      failure_threshold: "medium"

    - tool: "safety"
      description: "Python dependency vulnerability scanner"
      command: "safety check --json --file {requirements_file}"
      supported_languages: ["python"]
      schema: "safety.result.schema.json"
      timeout: 120
      required: true
      failure_threshold: "medium"

    - tool: "semgrep"
      description: "Static analysis tool for security"
      command: "semgrep --config=auto --json {module_path}"
      supported_languages: ["python", "javascript", "typescript", "go", "java"]
      schema: "semgrep.result.schema.json"
      timeout: 300
      required: false
      failure_threshold: "warning"

  performance:
    - tool: "pytest-benchmark"
      description: "Python benchmark testing"
      command: "pytest --benchmark-json={output_file} {test_path}/test_*benchmark*.py"
      supported_languages: ["python"]
      schema: "pytest-benchmark.result.schema.json"
      timeout: 600
      required: false
      failure_threshold: "warning"

    - tool: "py-spy"
      description: "Python performance profiler"
      command: "py-spy record -o {output_file} -- python {module_path}/main.py"
      supported_languages: ["python"]
      schema: "py-spy.result.schema.json"
      timeout: 300
      required: false
      failure_threshold: "info"

  documentation:
    - tool: "pydocstyle"
      description: "Python docstring style checker"
      command: "pydocstyle --format=json {module_path}"
      supported_languages: ["python"]
      schema: "pydocstyle.result.schema.json"
      timeout: 60
      required: false
      failure_threshold: "warning"

    - tool: "doc8"
      description: "Documentation style checker"
      command: "doc8 --format json {documentation_path}"
      supported_languages: ["markdown", "rst"]
      schema: "doc8.result.schema.json"
      timeout: 60
      required: false
      failure_threshold: "warning"

  testing:
    - tool: "pytest"
      description: "Python testing framework"
      command: "pytest {test_path} --json-report --json-report-file={output_file}"
      supported_languages: ["python"]
      schema: "pytest.result.schema.json"
      timeout: 600
      required: true
      failure_threshold: "error"

    - tool: "coverage"
      description: "Python code coverage measurement"
      command: "coverage run -m pytest {test_path} && coverage json -o {output_file}"
      supported_languages: ["python"]
      schema: "coverage.result.schema.json"
      timeout: 600
      required: true
      failure_threshold: "warning"

# Global validation settings
global_settings:
  # Timeout for all external tool executions (seconds)
  default_timeout: 300

  # Maximum number of parallel tool executions
  max_parallel_tools: 3

  # Retry configuration for failed tools
  retry_config:
    max_retries: 2
    backoff_factor: 2

  # Tool availability checking
  tool_discovery:
    check_path: true
    check_version: true
    cache_results: true
    cache_duration: 3600 # seconds

  # Output handling
  output_config:
    preserve_outputs: true
    output_directory: ".modular-build/validation-outputs"
    compress_outputs: true
    max_output_size: 10485760 # 10MB

  # Reporting
  report_config:
    include_tool_versions: true
    include_execution_time: true
    include_command_line: false # Security: don't expose full commands
    aggregate_results: true

# Tool-specific configurations
tool_configurations:
  pylint:
    config_file: ".pylintrc"
    additional_args: ["--disable=missing-docstring"]

  bandit:
    config_file: ".bandit"
    exclude_paths: ["*/tests/*", "*/test_*.py"]

  safety:
    ignore_vulnerabilities: [] # List of vulnerability IDs to ignore

  pytest:
    additional_args: ["--verbose", "--tb=short"]
    markers: ["not slow"] # Skip slow tests in validation

  coverage:
    minimum_coverage: 85
    exclude_patterns: ["*/tests/*", "*/conftest.py"]

# Language-specific settings
language_settings:
  python:
    file_patterns: ["*.py"]
    exclude_patterns: ["__pycache__/*", "*.pyc", ".venv/*"]
    default_tools: ["pylint", "bandit", "pytest", "coverage"]

  javascript:
    file_patterns: ["*.js", "*.jsx"]
    exclude_patterns: ["node_modules/*", "dist/*", "build/*"]
    default_tools: ["eslint"]

  typescript:
    file_patterns: ["*.ts", "*.tsx"]
    exclude_patterns: ["node_modules/*", "dist/*", "build/*"]
    default_tools: ["eslint"]

# Environment-specific overrides
environments:
  development:
    # More lenient in development
    required_tools_only: false
    failure_threshold_override: "warning"

  staging:
    # Standard validation
    required_tools_only: false

  production:
    # Strict validation for production
    required_tools_only: true
    failure_threshold_override: "error"
    additional_required_tools: ["safety", "bandit"]

# Integration hooks
integration_hooks:
  pre_validation:
    - command: "echo 'Starting external validation'"
      timeout: 10

  post_validation:
    - command: "echo 'External validation complete'"
      timeout: 10

  on_failure:
    - command: "echo 'Validation failed - see reports for details'"
      timeout: 10
