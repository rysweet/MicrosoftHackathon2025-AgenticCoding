{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://amplihack.dev/schemas/modular-build/generate.schema.json",
  "title": "Modular Build Generate Schema",
  "description": "Schema for code generation results in the Generate phase",
  "type": "object",
  "required": ["generated_files", "test_coverage", "integration_points", "generation_version"],
  "properties": {
    "generated_files": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["file_path", "file_type", "size_bytes", "checksum"],
        "properties": {
          "file_path": {
            "type": "string",
            "description": "Relative path to the generated file"
          },
          "file_type": {
            "type": "string",
            "enum": ["source", "test", "config", "documentation", "schema"],
            "description": "Type of generated file"
          },
          "size_bytes": {
            "type": "integer",
            "minimum": 0,
            "description": "File size in bytes"
          },
          "checksum": {
            "type": "string",
            "pattern": "^[a-f0-9]{64}$",
            "description": "SHA-256 checksum of file content"
          },
          "language": {
            "type": "string",
            "description": "Programming language or file format"
          },
          "purpose": {
            "type": "string",
            "description": "Purpose of this file in the module"
          },
          "dependencies": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Files this file depends on"
          }
        },
        "additionalProperties": false
      }
    },
    "test_coverage": {
      "type": "object",
      "required": ["percentage", "uncovered_lines", "test_files"],
      "properties": {
        "percentage": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Test coverage percentage"
        },
        "uncovered_lines": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["file", "line_numbers"],
            "properties": {
              "file": { "type": "string" },
              "line_numbers": { "type": "array", "items": { "type": "integer" } },
              "reason": { "type": "string" }
            }
          },
          "description": "Lines not covered by tests"
        },
        "test_files": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["file_path", "test_count", "coverage_percentage"],
            "properties": {
              "file_path": { "type": "string" },
              "test_count": { "type": "integer", "minimum": 0 },
              "coverage_percentage": { "type": "number", "minimum": 0, "maximum": 100 },
              "test_types": { "type": "array", "items": { "type": "string" } }
            }
          },
          "description": "Test files and their coverage"
        },
        "coverage_by_type": {
          "type": "object",
          "properties": {
            "unit_tests": { "type": "number", "minimum": 0, "maximum": 100 },
            "integration_tests": { "type": "number", "minimum": 0, "maximum": 100 },
            "functional_tests": { "type": "number", "minimum": 0, "maximum": 100 }
          }
        }
      },
      "additionalProperties": false
    },
    "integration_points": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["module", "interface", "status"],
        "properties": {
          "module": {
            "type": "string",
            "description": "Name of the module being integrated with"
          },
          "interface": {
            "type": "string",
            "description": "Interface or contract used for integration"
          },
          "status": {
            "type": "string",
            "enum": ["connected", "pending", "failed", "not_required"],
            "description": "Status of the integration"
          },
          "integration_type": {
            "type": "string",
            "enum": ["import", "api_call", "database", "event", "file_system"],
            "description": "Type of integration"
          },
          "validation_result": {
            "type": "object",
            "properties": {
              "validated": { "type": "boolean" },
              "validation_method": { "type": "string" },
              "error_details": { "type": "string" }
            }
          }
        },
        "additionalProperties": false
      }
    },
    "code_quality_metrics": {
      "type": "object",
      "properties": {
        "complexity_score": { "type": "number", "minimum": 0 },
        "maintainability_index": { "type": "number", "minimum": 0, "maximum": 100 },
        "technical_debt_ratio": { "type": "number", "minimum": 0, "maximum": 1 },
        "code_duplication": { "type": "number", "minimum": 0, "maximum": 100 },
        "cyclomatic_complexity": { "type": "object" },
        "halstead_metrics": { "type": "object" }
      }
    },
    "documentation_generated": {
      "type": "object",
      "properties": {
        "api_documentation": { "type": "boolean" },
        "code_comments": { "type": "number", "minimum": 0, "maximum": 100 },
        "readme_created": { "type": "boolean" },
        "examples_included": { "type": "boolean" },
        "docstring_coverage": { "type": "number", "minimum": 0, "maximum": 100 }
      }
    },
    "performance_benchmarks": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["benchmark_name", "result", "unit"],
        "properties": {
          "benchmark_name": { "type": "string" },
          "result": { "type": "number" },
          "unit": { "type": "string" },
          "baseline": { "type": "number" },
          "status": { "type": "string", "enum": ["pass", "fail", "warning"] }
        }
      }
    },
    "generation_version": {
      "type": "string",
      "pattern": "^v[0-9]+\\.[0-9]+$",
      "description": "Generation schema version"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "generated_at": { "type": "string", "format": "date-time" },
        "plan_reference": { "type": "string" },
        "generation_time": { "type": "string" },
        "total_lines_of_code": { "type": "integer", "minimum": 0 },
        "agents_used": { "type": "array", "items": { "type": "string" } }
      }
    }
  },
  "additionalProperties": false
}
