# Pre-commit hooks configuration
# https://pre-commit.com/

# Skip hooks: SKIP=hook_id git commit
# Bypass all: git commit --no-verify

default_language_version:
  python: python3

repos:
  # Universal quick checks (very fast)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-yaml
        args: [--unsafe] # Allow custom tags
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: \.md$ # Don't fix markdown files
      - id: trailing-whitespace
        exclude: \.md$ # Allow trailing spaces in markdown
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Python - Ruff (fast formatter and linter)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Python - Type checking with pyright
  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.405
    hooks:
      - id: pyright
        # Only check changed files for speed
        pass_filenames: true
        additional_dependencies: [] # Add project deps here if needed

  # JavaScript/TypeScript/Markdown formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|md|json|yaml|yml)$
        exclude: ^\.claude/ # Don't format .claude directory files

  # Markdown linting (optional, can be disabled if too strict)
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.45.0
  #   hooks:
  #     - id: markdownlint
  #       args: ["--fix"]
  #       exclude: ^\.claude/agents/ # Agent files have specific format

  # Secret detection (additional layer)
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: .*\.lock$

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      # Run pytest only on test files that changed
      - id: pytest-changed
        name: pytest for changed files
        entry: bash -c 'pytest -xvs $(git diff --cached --name-only | grep -E "test_.*\.py$" | tr "\n" " ") || true'
        language: system
        types: [python]
        pass_filenames: false
        stages: [pre-commit]
        verbose: true

      # Philosophy compliance check (custom)
      - id: philosophy-check
        name: Check code philosophy compliance
        entry: python .claude/tools/amplihack/hooks/philosophy_check.py
        language: system
        types: [python]
        pass_filenames: true
        require_serial: true
