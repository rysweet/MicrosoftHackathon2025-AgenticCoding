[project]
name = "microsofthackathon2025-agenticcoding"
version = "0.1.0"
description = "Agentic Coding Framework for Microsoft Hackathon 2025"
requires-python = ">=3.8"
dependencies = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
]

[project.scripts]
amplihack = "amplihack:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["amplihack*"]

[tool.setuptools.package-data]
# Include prompts and other package-internal files
amplihack = ["prompts/*.md"]

[tool.ruff]
# Essential Ruff settings only
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = ["E", "W", "F", "I"]  # Basic errors, warnings, pyflakes, isort
ignore = ["E501"]  # Line too long - handled by formatter

[tool.pyright]
# Essential Pyright settings only
pythonVersion = "3.8"
typeCheckingMode = "standard"
exclude = [
    "**/__pycache__",
    "**/venv",
    "**/.venv",
    "tests/**",
    "scripts/**/*.py",  # Exclude scripts from type checking
    ".claude/tools/amplihack/memory/tests/test_interface.py",  # TDD tests - expected to fail
    "Specs/xpia_defense_interface.py",  # Example/demo code with intentional type issues
    "Specs/xpia_usage_examples.py",     # Example/demo code with intentional type issues
    "src/amplihack/security/cli.py",    # CLI dependencies not available in CI
]

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests", "*/test_*.py", "*/**/test_*.py"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]
