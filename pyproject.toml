[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "microsofthackathon2025-agenticcoding"
version = "0.1.0"
description = "Agentic Coding Framework for Microsoft Hackathon 2025"
requires-python = ">=3.8"
dependencies = [
    "pytest-asyncio>=0.21.0",
    "cryptography>=3.4.8",
    "jinja2>=3.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[project.scripts]
amplihack = "amplihack:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["amplihack*"]

[tool.setuptools.package-data]
# Include prompts and framework files
# .claude/ is handled by custom build command in setup.py
amplihack = [
    "prompts/*.md",
]

[tool.ruff]
# Essential Ruff settings only
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = ["E", "W", "F", "I"]  # Basic errors, warnings, pyflakes, isort
ignore = ["E501", "E402"]  # Line too long - handled by formatter, Module level import not at top of file

[tool.pyright]
# Essential Pyright settings only
pythonVersion = "3.8"
typeCheckingMode = "standard"
exclude = [
    "**/__pycache__",
    "**/venv",
    "**/.venv",
    "tests/**",
    ".claude/tools/test-utilities/**/*.py",  # Test utilities with missing dependencies
    "scripts/**/*.py",  # Exclude scripts from type checking
    "src/amplihack/.claude/tools/amplihack/memory/tests/test_interface.py",  # TDD tests - expected to fail
    "Specs/xpia_defense_interface.py",  # Example/demo code with intentional type issues
    "Specs/xpia_usage_examples.py",     # Example/demo code with intentional type issues
    "src/amplihack/security/cli.py",    # CLI dependencies not available in CI
    "examples/**/*.py",  # Example/demo code
]

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests", "src"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--tb=short",
]
# Exclude standalone test scripts and other directories from collection
norecursedirs = [".git", ".tox", "dist", "build", "*.egg", "scripts"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
    "e2e: marks tests as end-to-end tests",
    "asyncio: marks tests as async tests that require asyncio",
    "requires_sdk: marks tests that require Claude Code SDK (skip in CI)",
]
